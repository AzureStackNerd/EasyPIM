on:
  push:
    paths:
      - 'EasyPIM/**'
      - 'EasyPIM.Orchestrator/**'
      - 'shared/**'
      - 'tests/**'
      - 'build/**'
  pull_request:
    paths:
      - 'EasyPIM/**'
      - 'EasyPIM.Orchestrator/**'
      - 'shared/**'
      - 'tests/**'
      - 'build/**'
  workflow_dispatch:

jobs:
  # Detect which modules have changes
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      easypim: ${{ steps.changes.outputs.easypim }}
      orchestrator: ${{ steps.changes.outputs.orchestrator }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            easypim:
              - 'EasyPIM/**'
              - 'shared/**'
              - 'tests/**'
              - 'build/**'
            orchestrator:
              - 'EasyPIM.Orchestrator/**'
              - 'shared/**'
              - 'tests/**'
              - 'build/**'

  validate-easypim:
    needs: detect-changes
    if: needs.detect-changes.outputs.easypim == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate EasyPIM Module (General Tests Only)
        run: |
          # Run only EasyPIM core general tests
          pwsh -NoProfile -ExecutionPolicy Bypass -Command "
            Import-Module Pester -Force
            `$config = New-PesterConfiguration
            `$config.Run.Path = @('.\tests\general\*.Tests.ps1')
            `$config.Output.Verbosity = 'Detailed'
            `$config.Run.PassThru = `$true
            `$config.TestResult.Enabled = `$true
            `$config.TestResult.OutputPath = '.\TestResults\TEST-EasyPIM-General.xml'
            `$results = Invoke-Pester -Configuration `$config
            if (`$results.FailedCount -gt 0) { exit 1 }
          "
        shell: pwsh

  validate-orchestrator:
    needs: detect-changes
    if: needs.detect-changes.outputs.orchestrator == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate Orchestrator Module (General Tests Only)
        run: |
          # Run orchestrator-specific tests (check multiple possible locations)
          pwsh -NoProfile -ExecutionPolicy Bypass -Command "
            Import-Module Pester -Force
            `$config = New-PesterConfiguration
            # Check for orchestrator tests in different locations
            `$testPaths = @()
            if (Test-Path '.\tests\orchestrator\*.Tests.ps1') { `$testPaths += '.\tests\orchestrator\*.Tests.ps1' }
            if (Test-Path '.\tests\functions\*orchestrator*.tests.ps1') { `$testPaths += '.\tests\functions\*orchestrator*.tests.ps1' }
            if (`$testPaths.Count -eq 0) {
              Write-Host 'No orchestrator-specific tests found, running basic module validation'
              # Basic module import test
              Import-Module '.\EasyPIM.Orchestrator\EasyPIM.Orchestrator.psd1' -Force
              `$commands = Get-Command -Module EasyPIM.Orchestrator
              if (`$commands.Count -eq 0) { 
                Write-Error 'No commands exported from EasyPIM.Orchestrator module'
                exit 1 
              }
              Write-Host 'EasyPIM.Orchestrator module loaded successfully with `$(`$commands.Count) commands'
              exit 0
            }
            `$config.Run.Path = `$testPaths
            `$config.Output.Verbosity = 'Detailed'
            `$config.Run.PassThru = `$true
            `$config.TestResult.Enabled = `$true
            `$config.TestResult.OutputPath = '.\TestResults\TEST-Orchestrator-General.xml'
            `$results = Invoke-Pester -Configuration `$config
            if (`$results.FailedCount -gt 0) { exit 1 }
          "
        shell: pwsh

  # Run all tests when workflow is manually triggered or when both modules are affected
  validate-all:
    needs: detect-changes
    if: github.event_name == 'workflow_dispatch' || (needs.detect-changes.outputs.easypim == 'true' && needs.detect-changes.outputs.orchestrator == 'true')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate All Modules (General Tests Only)
        run: .\tests\pester.ps1 -TestGeneral $true -TestFunctions $false -Output "Detailed" -Fast
        shell: pwsh