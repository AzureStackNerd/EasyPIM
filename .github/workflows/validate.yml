on:
  push:
    paths:
      - 'EasyPIM/**'
      - 'EasyPIM.Orchestrator/**'
      - 'shared/**'
      - 'tests/**'
      - 'build/**'
  pull_request:
    paths:
      - 'EasyPIM/**'
      - 'EasyPIM.Orchestrator/**'
      - 'shared/**'
      - 'tests/**'
      - 'build/**'
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      easypim: ${{ steps.changes.outputs.easypim }}
      orchestrator: ${{ steps.changes.outputs.orchestrator }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            easypim:
              - 'EasyPIM/**'
              - 'shared/**'
              - 'tests/**'
              - 'build/**'
            orchestrator:
              - 'EasyPIM.Orchestrator/**'
              - 'shared/**'
              - 'tests/**'
              - 'build/**'

  # Fast parallel smoke test for immediate feedback
  smoke-test:
    runs-on: windows-latest
    strategy:
      matrix:
        module: ['EasyPIM', 'EasyPIM.Orchestrator']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Quick Smoke Test - ${{ matrix.module }}
        run: |
          # Ultra-fast syntax and basic validation
          pwsh -NoProfile -Command "
            try {
              Write-Host 'üîç Testing ${{ matrix.module }} module...'
              if ('${{ matrix.module }}' -eq 'EasyPIM') {
                Test-ModuleManifest '.\EasyPIM\EasyPIM.psd1' -ErrorAction Stop
                Write-Host '‚úÖ EasyPIM manifest valid'
              } else {
                Test-ModuleManifest '.\EasyPIM.Orchestrator\EasyPIM.Orchestrator.psd1' -ErrorAction Stop
                Write-Host '‚úÖ Orchestrator manifest valid'
              }
              Write-Host 'üöÄ ${{ matrix.module }} smoke test passed'
            } catch {
              Write-Error '‚ùå ${{ matrix.module }} smoke test failed: ' + `$_.Exception.Message
              exit 1
            }
          "
        shell: pwsh

  validate-easypim:
    needs: detect-changes
    if: needs.detect-changes.outputs.easypim == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate EasyPIM Module (Parallel)
        run: .\tests\pester.ps1 -TestGeneral $true -TestFunctions $false -Output "Normal" -Parallel -Workers 4
        shell: pwsh

  validate-orchestrator:
    needs: detect-changes
    if: needs.detect-changes.outputs.orchestrator == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate Orchestrator Module (Parallel)
        run: .\tests\pester.ps1 -TestGeneral $true -TestFunctions $false -Output "Normal" -Parallel -Workers 4
        shell: pwsh

  validate-all:
    needs: detect-changes
    if: github.event_name == 'workflow_dispatch' || (needs.detect-changes.outputs.easypim == 'true' && needs.detect-changes.outputs.orchestrator == 'true')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Prerequisites
        run: .\build\vsts-prerequisites.ps1
        shell: pwsh
      - name: Validate All Modules (Parallel + Fast)
        run: .\tests\pester.ps1 -TestGeneral $true -TestFunctions $true -Output "Normal" -Fast -Parallel
        shell: pwsh
