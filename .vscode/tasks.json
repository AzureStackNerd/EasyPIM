{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "üöÄ Fast Tests (Parallel)",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"& { Import-Module Pester -Force; $ver = (Get-Module Pester).Version; if ($ver.Major -ge 5) { Write-Host 'Running with parallel execution'; .\\tests\\pester.ps1 -TestGeneral $true -TestFunctions $false -Output Normal -Fast -Parallel -Workers ([Math]::Max(2,[Environment]::ProcessorCount-1)) } else { Write-Host 'Sequential mode (upgrade Pester for parallel)'; .\\tests\\pester.ps1 -TestGeneral $true -TestFunctions $false -Output Normal -Fast } }"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true,
				"clear": false
			},
			"problemMatcher": ["$pester"]
		},
		{
			"label": "üîç General Tests Only",
			"type": "shell", 
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"d:\\WIP\\EASYPIM\\tests\\pester.ps1",
				"-TestGeneral",
				"$true",
				"-TestFunctions", 
				"$false",
				"-Output",
				"Normal"
			],
			"group": "test",
			"problemMatcher": ["$pester"]
		},
		{
			"label": "üéØ Function Tests (Requires Auth)",
			"type": "shell",
			"command": "pwsh", 
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"d:\\WIP\\EASYPIM\\tests\\pester.ps1",
				"-TestGeneral",
				"$false",
				"-TestFunctions",
				"$true",
				"-Output",
				"Detailed"
			],
			"group": "test",
			"problemMatcher": ["$pester"]
		},
		{
			"label": "üèÅ Complete Test Suite",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy", 
				"Bypass",
				"-Command",
				"& { Write-Host 'üèÅ Running complete test suite...'; Import-Module Pester -Force; $ver = (Get-Module Pester).Version; if ($ver.Major -ge 5) { .\\tests\\pester.ps1 -TestGeneral $true -TestFunctions $true -Output Normal -Parallel -Workers ([Environment]::ProcessorCount) } else { .\\tests\\pester.ps1 -TestGeneral $true -TestFunctions $true -Output Normal } }"
			],
			"group": "test",
			"problemMatcher": ["$pester"]
		},
		{
			"label": "üîß Build Validation",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass", 
				"-File",
				"d:\\WIP\\EASYPIM\\build\\vsts-validate.ps1"
			],
			"group": "build",
			"problemMatcher": ["$pester"]
		},
		{
			"label": "Git add + commit module-split + validate cleanup",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-Command",
				"git add -A; git commit -m \"docs(arch): module split plan; remove validate mode across code/docs; default to delta\""
			]
		},
		{
			"label": "Release: commit and push",
			"type": "shell",
			"command": "pwsh",
			"args": [
				"-NoProfile",
				"-Command",
				"git add -A; git commit -m \"chore(release): bump core to 2.0.2, orchestrator to 1.0.5; align workflows; E2E test fix; add release notes\"; git push -u origin feature/business-rules-validation"
			]
		}
	]
}